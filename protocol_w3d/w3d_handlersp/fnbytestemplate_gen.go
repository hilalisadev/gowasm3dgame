// Code generated by "genprotocol -ver=f5b1d289172cf84ad5d01b91533408be6b17961cf28ddd6fe767224298a8aedd -basedir=. -prefix=w3d -statstype=int"

package w3d_handlersp

/* bytes base demux fn map template

var DemuxRsp2BytesFnMap = [...]func(me interface{}, hd w3d_packet.Header, rbody []byte) error {
w3d_idcmd.Invalid : bytesRecvRspFn_Invalid,
w3d_idcmd.MakeTeam : bytesRecvRspFn_MakeTeam,
w3d_idcmd.Act : bytesRecvRspFn_Act,
w3d_idcmd.Heartbeat : bytesRecvRspFn_Heartbeat,

}

	func bytesRecvRspFn_Invalid(me interface{}, hd w3d_packet.Header, rbody []byte) error {
		robj, err := w3d_json.UnmarshalPacket(hd, rbody)
		if err != nil {
			return  fmt.Errorf("Packet type miss match %v", rbody)
		}
		recved , ok := robj.(*w3d_obj.RspInvalid_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", robj )
		}
		return fmt.Errorf("Not implemented %v", recved)
	}

	func bytesRecvRspFn_MakeTeam(me interface{}, hd w3d_packet.Header, rbody []byte) error {
		robj, err := w3d_json.UnmarshalPacket(hd, rbody)
		if err != nil {
			return  fmt.Errorf("Packet type miss match %v", rbody)
		}
		recved , ok := robj.(*w3d_obj.RspMakeTeam_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", robj )
		}
		return fmt.Errorf("Not implemented %v", recved)
	}

	func bytesRecvRspFn_Act(me interface{}, hd w3d_packet.Header, rbody []byte) error {
		robj, err := w3d_json.UnmarshalPacket(hd, rbody)
		if err != nil {
			return  fmt.Errorf("Packet type miss match %v", rbody)
		}
		recved , ok := robj.(*w3d_obj.RspAct_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", robj )
		}
		return fmt.Errorf("Not implemented %v", recved)
	}

	func bytesRecvRspFn_Heartbeat(me interface{}, hd w3d_packet.Header, rbody []byte) error {
		robj, err := w3d_json.UnmarshalPacket(hd, rbody)
		if err != nil {
			return  fmt.Errorf("Packet type miss match %v", rbody)
		}
		recved , ok := robj.(*w3d_obj.RspHeartbeat_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", robj )
		}
		return fmt.Errorf("Not implemented %v", recved)
	}

*/
