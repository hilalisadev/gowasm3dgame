// Code generated by "genprotocol -ver=213afa194ef0e682076c6a0cbf801946c13d343cc54330be7c4557e46057a498 -basedir=. -prefix=w3d -statstype=int"

package w3d_gob

import (
	"bytes"
	"encoding/gob"
	"fmt"

	"github.com/kasworld/gowasm3dgame/protocol_w3d/w3d_idcmd"
	"github.com/kasworld/gowasm3dgame/protocol_w3d/w3d_idnoti"
	"github.com/kasworld/gowasm3dgame/protocol_w3d/w3d_obj"
	"github.com/kasworld/gowasm3dgame/protocol_w3d/w3d_packet"
)

// marshal body and append to oldBufferToAppend
// and return newbuffer, body type, error
func MarshalBodyFn(body interface{}, oldBuffToAppend []byte) ([]byte, byte, error) {
	network := bytes.NewBuffer(oldBuffToAppend)
	enc := gob.NewEncoder(network)
	err := enc.Encode(body)
	return network.Bytes(), 0, err
}

func UnmarshalPacket(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	switch h.FlowType {
	case w3d_packet.Request:
		if int(h.Cmd) >= len(ReqUnmarshalMap) {
			return nil, fmt.Errorf("unknown request command: %v %v",
				h.FlowType, w3d_idcmd.CommandID(h.Cmd))
		}
		return ReqUnmarshalMap[h.Cmd](h, bodyData)

	case w3d_packet.Response:
		if int(h.Cmd) >= len(RspUnmarshalMap) {
			return nil, fmt.Errorf("unknown response command: %v %v",
				h.FlowType, w3d_idcmd.CommandID(h.Cmd))
		}
		return RspUnmarshalMap[h.Cmd](h, bodyData)

	case w3d_packet.Notification:
		if int(h.Cmd) >= len(NotiUnmarshalMap) {
			return nil, fmt.Errorf("unknown notification command: %v %v",
				h.FlowType, w3d_idcmd.CommandID(h.Cmd))
		}
		return NotiUnmarshalMap[h.Cmd](h, bodyData)
	}
	return nil, fmt.Errorf("unknown packet FlowType %v", h.FlowType)
}

var ReqUnmarshalMap = [...]func(h w3d_packet.Header, bodyData []byte) (interface{}, error){
	w3d_idcmd.Invalid:     unmarshal_ReqInvalid,
	w3d_idcmd.EnterStage:  unmarshal_ReqEnterStage,
	w3d_idcmd.ChatToStage: unmarshal_ReqChatToStage,
	w3d_idcmd.Heartbeat:   unmarshal_ReqHeartbeat,
}

var RspUnmarshalMap = [...]func(h w3d_packet.Header, bodyData []byte) (interface{}, error){
	w3d_idcmd.Invalid:     unmarshal_RspInvalid,
	w3d_idcmd.EnterStage:  unmarshal_RspEnterStage,
	w3d_idcmd.ChatToStage: unmarshal_RspChatToStage,
	w3d_idcmd.Heartbeat:   unmarshal_RspHeartbeat,
}

var NotiUnmarshalMap = [...]func(h w3d_packet.Header, bodyData []byte) (interface{}, error){
	w3d_idnoti.Invalid:   unmarshal_NotiInvalid,
	w3d_idnoti.StageInfo: unmarshal_NotiStageInfo,
	w3d_idnoti.StatsInfo: unmarshal_NotiStatsInfo,
	w3d_idnoti.StageChat: unmarshal_NotiStageChat,
}

func unmarshal_ReqInvalid(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.ReqInvalid_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_RspInvalid(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.RspInvalid_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_ReqEnterStage(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.ReqEnterStage_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_RspEnterStage(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.RspEnterStage_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_ReqChatToStage(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.ReqChatToStage_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_RspChatToStage(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.RspChatToStage_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_ReqHeartbeat(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.ReqHeartbeat_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_RspHeartbeat(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.RspHeartbeat_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_NotiInvalid(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.NotiInvalid_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_NotiStageInfo(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.NotiStageInfo_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_NotiStatsInfo(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.NotiStatsInfo_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}

func unmarshal_NotiStageChat(h w3d_packet.Header, bodyData []byte) (interface{}, error) {
	var args w3d_obj.NotiStageChat_data
	network := bytes.NewBuffer(bodyData)
	dec := gob.NewDecoder(network)
	err := dec.Decode(&args)
	return &args, err
}
